name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        VOICE_API_KEY: ${{ secrets.VOICE_API_KEY }}
        DEBUG: ${{ secrets.DEBUG }}
        CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
        ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      run: |
        python manage.py test

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to VPS
      run: |
        ssh -p 222 -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << EOF
          if [ ! -d "/var/www/thai_school_alarm_web" ]; then
            mkdir -p /var/www/thai_school_alarm_web  # สร้าง directory /root/redirect ถ้ายังไม่มี
          fi
          cd /var/www/thai_school_alarm_web
          if [ ! -d ".git" ]; then
            git clone https://${{ secrets.GITHUB_TOKEN }}@github.com/attane007/thai_school_alarm_web.git .  # ทำการ clone repository
          fi
          git pull https://${{ secrets.GITHUB_TOKEN }}@github.com/attane007/thai_school_alarm_web.git master   # Pull the latest changes

          # สร้าง virtual environment ถ้ายังไม่มี
          if [ ! -d "/var/www/env" ]; then
            python3 -m venv /var/www/env
          fi

          source /var/www/env/bin/activate
          pip install -r requirements.txt  # Install any dependencies
          python3 /var/www/thai_school_alarm_web/manage.py collectstatic --noinput
          systemctl restart alarm.service  # Restart FastAPI service
          systemctl restart alarm_celery.service
          systemctl restart alarm_beat.service
        EOF
